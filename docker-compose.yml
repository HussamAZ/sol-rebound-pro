# /home/hussamaz/sol-rebound/docker-compose.yml


services:
  mongo:
    image: mongo:latest
    container_name: sol-rebound-mongo-1
    restart: unless-stopped # أنصح باستخدام unless-stopped بدلاً من on-failure لمزيد من القوة
    ports:
      - "127.0.0.1:27017:27017" # <--- **هذا هو التعديل الحاسم**
    volumes:
      # --- هذا هو الحل الصحيح والآمن ---
      - /home/hussamaz/sol-rebound-data/mongo:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  vault:
    image: hashicorp/vault:latest
    container_name: sol-rebound-vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - /home/hussamaz/sol-rebound-data/vault:/vault/data
      - ./vault-config.hcl:/vault/config/vault-config.hcl
    command: >
      sh -c "sleep 5 && vault server -config=/vault/config/vault-config.hcl"
    healthcheck:
      test: ["CMD", "vault", "status", "-address=http://127.0.0.1:8200"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: sol-rebound-backend
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      vault:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: sol-rebound-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/letsencrypt:/var/www/letsencrypt:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: sol-rebound-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/healthy"]
      interval: 15s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: sol-rebound-grafana
    restart: unless-stopped
    ports:
      - "3003:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "${GF_SECURITY_ADMIN_PASSWORD}" # تأكد من أن اسم المتغير في ملف .env هو GF_SECURITY_ADMIN_PASSWORD وليس GF_ADMIN_PASSWORD
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 3

volumes:
  # لم نعد بحاجة لتعريف mongo_data هنا
  grafana_data:
    driver: local

