# /home/hussamaz/sol-rebound/frontend/nginx.conf

# HTTP server block: Listens on port 80 and redirects all traffic to HTTPS
server {
    listen 80;
    listen [::]:80; # For IPv6

    # Replace with your actual domain(s)
    server_name solrebound.com www.solrebound.com;

    # Redirect all HTTP traffic to HTTPS with a 301 Moved Permanently response
    return 301 https://$host$request_uri;
}

# HTTPS server block: Listens on port 443 for secure traffic
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;	
    # Replace with your actual domain(s)
    server_name solrebound.com www.solrebound.com;

    # SSL/TLS Certificate and Key paths (provided by Certbot)
    # Ensure these paths are correct and accessible to Nginx (usually via Docker volume mounts if Certbot runs on host)
    # The paths below are standard for Certbot installations.
    ssl_certificate /etc/letsencrypt/live/solrebound.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/solrebound.com/privkey.pem;

    # Recommended SSL/TLS security settings (optional but good practice)
    ssl_protocols TLSv1.2 TLSv1.3; # Use modern TLS versions
    ssl_prefer_server_ciphers off; # Let the client choose (usually better for modern clients)
    # More advanced cipher suite (example, research current best practices if needed)
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m; # About 40000 sessions
    ssl_session_tickets off; # Improve security by disabling session tickets if not strictly needed

    # Diffie-Hellman parameter for DHE ciphersuites (generate this file if you use DHE ciphers)
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # Generate with: sudo openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 2048

    # Add HSTS header to force HTTPS (optional, but good for security after testing)
    # Be cautious with max-age; start with a low value and increase once confirmed.
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # OCSP Stapling (improves performance and privacy of SSL checks)
    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_trusted_certificate /etc/letsencrypt/live/solrebound.com/chain.pem; # Path to your CA's intermediate certificate
    # resolver 8.8.8.8 8.8.4.4 valid=300s; # Google's public DNS, or your preferred resolver
    # resolver_timeout 5s;

    # Root directory for the frontend application's static files
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static files directly
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Location block for Let's Encrypt ACME challenge (used by Certbot webroot)
    # This ensures Certbot can verify domain ownership.
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt; # This path should be volume-mounted from the host
    }

    # Proxy pass for Swagger API documentation
    # (If you decided to keep it accessible and secured it appropriately)
    location /api-docs {
        proxy_pass http://backend:3001/api-docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Important for backend to know it's HTTPS
        # Add other necessary proxy headers if needed
    }

    # Proxy pass for the main backend API
    location /api/ {
        proxy_pass http://backend:3001; # Assuming backend service is named 'backend' and listens on 3001
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Important
        # Add other necessary proxy headers
    }

    # Optional: Gzip compression for better performance
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Optional: Security headers
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header X-XSS-Protection "1; mode=block" always;
    # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data:; connect-src 'self' http://backend:3001 https://mainnet.helius-rpc.com;" always;
    # (Content-Security-Policy needs careful configuration based on your app's resources)
}
